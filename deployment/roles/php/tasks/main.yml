---
# TODO figure out how to append to this from different roles and not clobber
# what's already on the file system if running a subset of roles
#- set_fact:
    #open_basedirs="{{ open_basedirs }} + [ '{{ php_file_directory }}' ]"

- group: name=php state=present

- ansible.builtin.user:
    name: php
    groups:
      - php
    append: yes

- ansible.builtin.user:
    name: nginx
    groups:
      - php
    append: yes

- ansible.builtin.apt_repository:
    repo: "ppa:ondrej/php"

- ansible.builtin.apt:
    name: [
      'php',
      'php-cli',
      'php-mysql',
      'php-fpm',
    ]
    state: latest

- file: path={{ php_home_dir }}/etc/fpm.d
        state=directory
        mode=0755
  become: yes
  become_user: php

# Needs to be writable by the php-fpm www processes, which run as the php user,
# or error_log will fail silently
- file: path={{ php_log_dir }}
        state=directory
        mode=0755
        owner=php
        group=php

- file: path={{ php_home_dir }}/run
        state=directory
        mode=0755
  become: yes
  become_user: php

- ansible.builtin.file:
    # TODO variablize the "8.0"
    src: /usr/sbin/php-fpm8.0
    dest: /usr/sbin/php-fpm
    state: link

# TODO variablize the "8.0"
# TODO these config files are owned by root.
- name: write the base php-fpm.conf
  template: src=php-fpm.conf
            dest=/etc/php/8.0/fpm/pool.d/php-fpm.conf
            owner=php
            group=php
            mode=0644
  notify: reload php

- debug: var=open_basedirs

- ansible.builtin.file:
    name: "{{ php_home_dir }}/lib"
    state: directory
  become: yes
  become_user: php

- name: write php.ini
  template: src=php.ini
            dest=/etc/php/8.0/cli/conf.d/php.ini
            mode=0644
  notify: reload php

- name: write /etc/init.d/php-fpm
  template: src=php-fpm.initd
            dest=/etc/init.d/php-fpm
            mode=0755
  notify: reload php
