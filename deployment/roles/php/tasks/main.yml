---
# TODO figure out how to append to this from different roles and not clobber
# what's already on the file system if running a subset of roles
#- set_fact:
    #open_basedirs="{{ open_basedirs }} + [ '{{ php_file_directory }}' ]"

- group: name=php state=present

- ansible.builtin.user:
    name: php
    groups:
      - php
    append: yes

- ansible.builtin.user:
    name: nginx
    groups:
      - php
    append: yes

- ansible.builtin.apt_repository:
    repo: "ppa:ondrej/php"

- ansible.builtin.apt:
    name: [
      'php',
      'php-cli',
      'php-mysql',
      'php-fpm',
      'php-gd',
      'php-mbstring',
      'php-zip',
      'php-intl',
    ]

- name: stop and disable Apache2
  ansible.builtin.systemd:
    name: apache2
    state: stopped
    enabled: no
    masked: yes

- file: path={{ php_home_dir }}/etc/fpm.d
        state=directory
        mode=0755
  become: yes
  become_user: php

# Needs to be writable by the php-fpm www processes, which run as the php user,
# or error_log will fail silently
- file: path={{ php_log_dir }}
        state=directory
        mode=0755
        owner=php
        group=php

- file: path={{ php_home_dir }}/run
        state=directory
        mode=0755
  become: yes
  become_user: php

- file: path={{ php_home_dir }}/bin
        state=directory
        mode=0755
  become: yes
  become_user: php

- name: copy logrotate script
  copy: src=logrotate
        dest=/etc/logrotate.d/php
        mode=644

- ansible.builtin.file:
    # TODO variablize the "8.4"
    src: /usr/sbin/php-fpm8.4
    dest: /usr/sbin/php-fpm
    state: link

- name: remove the default php-fpm pool config
  ansible.builtin.file:
    path: "{{ php_fpm_pool_dir }}/www.conf"
    state: absent

# TODO variablize the "8.4"
# TODO these config files are owned by root.
- name: write the base php-fpm.conf
  ansible.builtin.template: src=php-fpm.conf
            dest="{{ php_fpm_pool_dir }}/php-fpm.conf"
            owner=php
            group=php
            mode=0644
  notify: reload php

- debug: var=open_basedirs

- ansible.builtin.file:
    name: "{{ php_home_dir }}/lib"
    state: directory
  become: yes
  become_user: php

- name: write php.ini
  template: src=php.ini
            dest=/etc/php/8.4/cli/conf.d/php.ini
            mode=0644
  notify: reload php

- name: write php-fpm ini
  ansible.builtin.template:
    src: php-fpm.ini
    dest: /etc/php/8.4/fpm/php.ini
    owner: php
    group: php
    mode: 0644

- name: Create systemd override directory
  ansible.builtin.file:
    path: "{{ php_systemd_dir }}"
    state: directory
    mode: 0755

- ansible.builtin.template:
    src: php.systemd
    dest: "{{ php_systemd_service }}"
  notify:
    - reload systemd

- ansible.builtin.systemd:
    name: php8.4-fpm
    state: started
